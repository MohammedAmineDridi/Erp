/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package swing;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author dridi family
 */
public class Consulter_articles extends javax.swing.JFrame {

    /**
     * Creates new form Consulter_articles
     */
    public Consulter_articles() throws SQLException {
        initComponents();
        txt_code_dossier.setEditable(false);
        fill_combo_des();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        table_fournisseur = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        table_vis2 = new javax.swing.JTable();
        combo_designation = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txt_code_dossier = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        table_mono_couche = new javax.swing.JTable();
        jScrollPane6 = new javax.swing.JScrollPane();
        table_vis1 = new javax.swing.JTable();
        jScrollPane7 = new javax.swing.JScrollPane();
        table_vis3 = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();
        btn_supprimer = new javax.swing.JLabel();

        jScrollPane1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));

        table_fournisseur.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        table_fournisseur.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "reference", "adresse mail", "adresse", "numero telephone"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table_fournisseur.setGridColor(new java.awt.Color(255, 255, 255));
        table_fournisseur.setRowHeight(22);
        table_fournisseur.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table_fournisseurMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table_fournisseur);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(51, 0, 51));

        jLabel7.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Conulter les articles");

        jScrollPane2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));

        table_vis2.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        table_vis2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "q_vis2", "matiere1", "q_matiere1", "matiere2", "q_matiere2", "matiere3", "q_matiere3", "matiere4", "q_matiere4"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        table_vis2.setGridColor(new java.awt.Color(255, 255, 255));
        table_vis2.setRowHeight(22);
        table_vis2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table_vis2MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(table_vis2);
        if (table_vis2.getColumnModel().getColumnCount() > 0) {
            table_vis2.getColumnModel().getColumn(0).setResizable(false);
            table_vis2.getColumnModel().getColumn(1).setResizable(false);
            table_vis2.getColumnModel().getColumn(2).setResizable(false);
            table_vis2.getColumnModel().getColumn(3).setResizable(false);
            table_vis2.getColumnModel().getColumn(4).setResizable(false);
            table_vis2.getColumnModel().getColumn(5).setResizable(false);
            table_vis2.getColumnModel().getColumn(6).setResizable(false);
            table_vis2.getColumnModel().getColumn(7).setResizable(false);
            table_vis2.getColumnModel().getColumn(8).setResizable(false);
        }

        combo_designation.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                combo_designationMouseClicked(evt);
            }
        });
        combo_designation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_designationActionPerformed(evt);
            }
        });

        jLabel1.setText("designation de l'article : ");

        jLabel2.setText("code dossier :");

        txt_code_dossier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_code_dossierActionPerformed(evt);
            }
        });

        jLabel3.setText("I - tri couche : ");

        jLabel4.setText(" vis 1 : ");

        jLabel5.setText("vis 2 : ");

        jLabel6.setText("vis 3 : ");

        jLabel8.setText("II - mono couche : ");

        jScrollPane5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));

        table_mono_couche.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        table_mono_couche.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "matiere1", "q_matiere1", "matiere2", "q_matiere2", "matiere3", "q_matiere3", "additif1", "q_additif1", "additif2", "q_additif2", "colorant", "q_colorant"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        table_mono_couche.setGridColor(new java.awt.Color(255, 255, 255));
        table_mono_couche.setRowHeight(22);
        table_mono_couche.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table_mono_coucheMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(table_mono_couche);
        if (table_mono_couche.getColumnModel().getColumnCount() > 0) {
            table_mono_couche.getColumnModel().getColumn(0).setResizable(false);
            table_mono_couche.getColumnModel().getColumn(1).setResizable(false);
            table_mono_couche.getColumnModel().getColumn(2).setResizable(false);
            table_mono_couche.getColumnModel().getColumn(3).setResizable(false);
            table_mono_couche.getColumnModel().getColumn(4).setResizable(false);
            table_mono_couche.getColumnModel().getColumn(5).setResizable(false);
            table_mono_couche.getColumnModel().getColumn(6).setResizable(false);
            table_mono_couche.getColumnModel().getColumn(7).setResizable(false);
            table_mono_couche.getColumnModel().getColumn(8).setResizable(false);
            table_mono_couche.getColumnModel().getColumn(9).setResizable(false);
            table_mono_couche.getColumnModel().getColumn(10).setResizable(false);
            table_mono_couche.getColumnModel().getColumn(11).setResizable(false);
        }

        jScrollPane6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));

        table_vis1.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        table_vis1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "q_vis1", "matiere1", "q_matiere1", "matiere2", "q_matiere2", "matiere3", "q_matiere3", "matiere4", "q_matiere4"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        table_vis1.setGridColor(new java.awt.Color(255, 255, 255));
        table_vis1.setRowHeight(22);
        table_vis1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table_vis1MouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(table_vis1);
        if (table_vis1.getColumnModel().getColumnCount() > 0) {
            table_vis1.getColumnModel().getColumn(0).setResizable(false);
            table_vis1.getColumnModel().getColumn(1).setResizable(false);
            table_vis1.getColumnModel().getColumn(2).setResizable(false);
            table_vis1.getColumnModel().getColumn(3).setResizable(false);
            table_vis1.getColumnModel().getColumn(4).setResizable(false);
            table_vis1.getColumnModel().getColumn(5).setResizable(false);
            table_vis1.getColumnModel().getColumn(6).setResizable(false);
            table_vis1.getColumnModel().getColumn(7).setResizable(false);
            table_vis1.getColumnModel().getColumn(8).setResizable(false);
        }

        jScrollPane7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));

        table_vis3.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        table_vis3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "q_vis3", "matiere1", "q_matiere1", "matiere2", "q_matiere2", "matiere3", "q_matiere3", "matiere4", "q_matiere4"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        table_vis3.setGridColor(new java.awt.Color(255, 255, 255));
        table_vis3.setRowHeight(22);
        table_vis3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table_vis3MouseClicked(evt);
            }
        });
        jScrollPane7.setViewportView(table_vis3);
        if (table_vis3.getColumnModel().getColumnCount() > 0) {
            table_vis3.getColumnModel().getColumn(0).setResizable(false);
            table_vis3.getColumnModel().getColumn(1).setResizable(false);
            table_vis3.getColumnModel().getColumn(2).setResizable(false);
            table_vis3.getColumnModel().getColumn(3).setResizable(false);
            table_vis3.getColumnModel().getColumn(4).setResizable(false);
            table_vis3.getColumnModel().getColumn(5).setResizable(false);
            table_vis3.getColumnModel().getColumn(6).setResizable(false);
            table_vis3.getColumnModel().getColumn(7).setResizable(false);
            table_vis3.getColumnModel().getColumn(8).setResizable(false);
        }

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/swing/images/cancel_icon.png"))); // NOI18N
        jLabel9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel9MouseClicked(evt);
            }
        });

        btn_supprimer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/swing/images/delete_icon.png"))); // NOI18N
        btn_supprimer.setText(" supprimer");
        btn_supprimer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_supprimerMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(78, 78, 78)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(combo_designation, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(87, 87, 87)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_code_dossier, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(561, 561, 561))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 606, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 606, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 606, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(172, 172, 172)
                        .addComponent(btn_supprimer, javax.swing.GroupLayout.PREFERRED_SIZE, 383, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 652, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addGap(269, 269, 269))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addGap(66, 66, 66)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(combo_designation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_code_dossier, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(14, 14, 14)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(btn_supprimer, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void table_fournisseurMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table_fournisseurMouseClicked


    }//GEN-LAST:event_table_fournisseurMouseClicked

    private void table_vis2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table_vis2MouseClicked

       

    }//GEN-LAST:event_table_vis2MouseClicked

    private void txt_code_dossierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_code_dossierActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_code_dossierActionPerformed

    private void table_mono_coucheMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table_mono_coucheMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_table_mono_coucheMouseClicked

    private void combo_designationMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_combo_designationMouseClicked
     
    }//GEN-LAST:event_combo_designationMouseClicked

    private void combo_designationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_designationActionPerformed
        try {
            // combo designation action
            
            // effacer les 4 tab : 3vis + mono couche
            
            
               // remove vis1
                
                
                DefaultTableModel dm = (DefaultTableModel) table_vis1.getModel();
            int rowCount = dm.getRowCount();
            //Remove rows one by one from the end of the table
            for (int i = rowCount - 1; i >= 0; i--) {
         dm.removeRow(i);
            }
            
            
            
            // remove vis2 
            
               DefaultTableModel dm2 = (DefaultTableModel) table_vis2.getModel();
            int rowCount2 = dm2.getRowCount();
            //Remove rows one by one from the end of the table
            for (int i = rowCount2 - 1; i >= 0; i--) {
         dm2.removeRow(i);
            }
             
            
                        // remove vis3 
            
               DefaultTableModel dm3 = (DefaultTableModel) table_vis3.getModel();
            int rowCount3 = dm3.getRowCount();
            //Remove rows one by one from the end of the table
            for (int i = rowCount3 - 1; i >= 0; i--) {
         dm3.removeRow(i);
            }
                
            
                 // remove mono couche 
            
               DefaultTableModel dm4 = (DefaultTableModel) table_mono_couche.getModel();
            int rowCount4 = dm4.getRowCount();
            //Remove rows one by one from the end of the table
            for (int i = rowCount4 - 1; i >= 0; i--) {
         dm4.removeRow(i);
            }
            
            
            
            String designation = combo_designation.getSelectedItem().toString();
            
            remplir_code_dossier(designation);
            
            // remplir les tables tri et mono couches
            
            remplir_vis1(designation);
            
            remplir_vis2(designation);
            
            remplir_vis3(designation);
            
            
            
            //mono couche
            
            remplir_tab_mono_couche(designation);
            
            
            // btn supp
            btn_supprimer.setText("");
            
            btn_supprimer.setText( " supprimer  l'article de designation = " + designation );
            
        } catch (SQLException ex) {
            Logger.getLogger(Consulter_articles.class.getName()).log(Level.SEVERE, null, ex);
        }
          
          
    }//GEN-LAST:event_combo_designationActionPerformed

    private void table_vis1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table_vis1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_table_vis1MouseClicked

    private void table_vis3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table_vis3MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_table_vis3MouseClicked

    private void jLabel9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel9MouseClicked
        this.dispose();
    }//GEN-LAST:event_jLabel9MouseClicked

    private void btn_supprimerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_supprimerMouseClicked
       String designation = combo_designation.getSelectedItem().toString();
        
       
       supprimer_article(designation);
        supprimer_vis1(designation);
        
           supprimer_vis2(designation);
           
              supprimer_vis3(designation);
              
                 supprimer_mono_couche(designation);
        
    }//GEN-LAST:event_btn_supprimerMouseClicked

    
    
    
    // supprimer un article : 3vis + mono_couche
    
    
    
    // supp article 
    
    
     
    public void supprimer_article(String designation){
    
        
        
        //supp

        String url;
        Connection con = null;
        try {
            Class.forName("com.mysql.jdbc.Driver");
            url="jdbc:mysql://localhost:3306/ahmed";
            con = DriverManager.getConnection(url,"root","Aminedridi11");
            //  System.out.println("mrigl");

        }
        catch (Exception e) {
            System.out.println(e.toString());
        }

        try {
            // login action

            Statement stm = con.createStatement();

            //execute query

            // input pour l'update celon la matricule

            //UPDATE client SET rue = '49 Rue Ameline',ville = 'Saint-Eustache-la-Forêt',code_postal = '76210' WHERE id = 2

       

            String sql =" DELETE FROM article WHERE designation ='"+designation+"'";
            System.out.println(sql);

            PreparedStatement ps = con.prepareStatement(sql);

            ps.executeUpdate();

            //   System.out.println("le utilisateur de nom "+nom+" est supprimé !!!  ");

            JOptionPane.showMessageDialog(this,"l'article de designation = " + designation +"  est supprimé avec succés  ");
          
            
            

        } catch (SQLException ex) {

            System.out.println(ex.getMessage());

        }

    
    }
    
    
    
    
    public void supprimer_vis1(String designation){
    
        
                
        
        //supp

        String url;
        Connection con = null;
        try {
            Class.forName("com.mysql.jdbc.Driver");
            url="jdbc:mysql://localhost:3306/ahmed";
            con = DriverManager.getConnection(url,"root","Aminedridi11");
            //  System.out.println("mrigl");

        }
        catch (Exception e) {
            System.out.println(e.toString());
        }

        try {
            // login action

            Statement stm = con.createStatement();

            //execute query

            // input pour l'update celon la matricule

            //UPDATE client SET rue = '49 Rue Ameline',ville = 'Saint-Eustache-la-Forêt',code_postal = '76210' WHERE id = 2

            DefaultTableModel model3 = (DefaultTableModel) table_vis1.getModel();

            int SelectedRowIndex = table_vis1.getSelectedRow();

            String sql =" DELETE FROM vis1 WHERE designation ='"+designation+"'";
            System.out.println(sql);

            PreparedStatement ps = con.prepareStatement(sql);

            ps.executeUpdate();

            //   System.out.println("le utilisateur de nom "+nom+" est supprimé !!!  ");

            JOptionPane.showMessageDialog(this,"vis1 de l'article de designation = " + designation +"  est supprimé avec succés  ");
            
            
            
    
            
               // remove vis1
               
               
            int rowCount = model3.getRowCount();
            //Remove rows one by one from the end of the table
            for (int i = rowCount - 1; i >= 0; i--) {
         model3.removeRow(i);
            }
            
            

        } catch (SQLException ex) {

            System.out.println(ex.getMessage());

        }

    
    }
    
    
    
    
    // supp vis2
    
    
    
    public void supprimer_vis2(String designation){
    
        
        
        //supp

        String url;
        Connection con = null;
        try {
            Class.forName("com.mysql.jdbc.Driver");
            url="jdbc:mysql://localhost:3306/ahmed";
            con = DriverManager.getConnection(url,"root","Aminedridi11");
            //  System.out.println("mrigl");

        }
        catch (Exception e) {
            System.out.println(e.toString());
        }

        try {
            // login action

            Statement stm = con.createStatement();

            //execute query

            // input pour l'update celon la matricule

            //UPDATE client SET rue = '49 Rue Ameline',ville = 'Saint-Eustache-la-Forêt',code_postal = '76210' WHERE id = 2

            DefaultTableModel model3 = (DefaultTableModel) table_vis2.getModel();

            int SelectedRowIndex = table_vis2.getSelectedRow();

            String sql =" DELETE FROM vis2 WHERE designation ='"+designation+"'";
            System.out.println(sql);

            PreparedStatement ps = con.prepareStatement(sql);

            ps.executeUpdate();

            //   System.out.println("le utilisateur de nom "+nom+" est supprimé !!!  ");

            JOptionPane.showMessageDialog(this,"vis2 de l'article de designation = " + designation +"  est supprimé avec succés  ");
            
            
            
    
            
               // remove vis2
               
               
            int rowCount = model3.getRowCount();
            //Remove rows one by one from the end of the table
            for (int i = rowCount - 1; i >= 0; i--) {
         model3.removeRow(i);
            }
            
            

        } catch (SQLException ex) {

            System.out.println(ex.getMessage());

        }

    
    }
    
    
    
    
    
    // supp vis 3
    
    
    public void supprimer_vis3(String designation){
    
        
        
        //supp

        String url;
        Connection con = null;
        try {
            Class.forName("com.mysql.jdbc.Driver");
            url="jdbc:mysql://localhost:3306/ahmed";
            con = DriverManager.getConnection(url,"root","Aminedridi11");
            //  System.out.println("mrigl");

        }
        catch (Exception e) {
            System.out.println(e.toString());
        }

        try {
            // login action

            Statement stm = con.createStatement();

            //execute query

            // input pour l'update celon la matricule

            //UPDATE client SET rue = '49 Rue Ameline',ville = 'Saint-Eustache-la-Forêt',code_postal = '76210' WHERE id = 2

            DefaultTableModel model3 = (DefaultTableModel) table_vis3.getModel();

            int SelectedRowIndex = table_vis3.getSelectedRow();

            String sql =" DELETE FROM vis3 WHERE designation ='"+designation+"'";
            System.out.println(sql);

            PreparedStatement ps = con.prepareStatement(sql);

            ps.executeUpdate();

            //   System.out.println("le utilisateur de nom "+nom+" est supprimé !!!  ");

            JOptionPane.showMessageDialog(this,"vis3 de l'article de designation = " + designation +"  est supprimé avec succés  ");
            
            
            
    
            
               // remove vis1
               
               
            int rowCount = model3.getRowCount();
            //Remove rows one by one from the end of the table
            for (int i = rowCount - 1; i >= 0; i--) {
         model3.removeRow(i);
            }
            
            

        } catch (SQLException ex) {

            System.out.println(ex.getMessage());

        }

    
    }
    
    
    
    // supp tab mono couche
    
    public void supprimer_mono_couche(String designation){
    
        
        
        //supp

        String url;
        Connection con = null;
        try {
            Class.forName("com.mysql.jdbc.Driver");
            url="jdbc:mysql://localhost:3306/ahmed";
            con = DriverManager.getConnection(url,"root","Aminedridi11");
            //  System.out.println("mrigl");

        }
        catch (Exception e) {
            System.out.println(e.toString());
        }

        try {
            // login action

            Statement stm = con.createStatement();

            //execute query

            // input pour l'update celon la matricule

            //UPDATE client SET rue = '49 Rue Ameline',ville = 'Saint-Eustache-la-Forêt',code_postal = '76210' WHERE id = 2

            DefaultTableModel model3 = (DefaultTableModel) table_mono_couche.getModel();

            int SelectedRowIndex = table_vis1.getSelectedRow();

            String sql =" DELETE FROM machine2 WHERE designation ='"+designation+"'";
            System.out.println(sql);

            PreparedStatement ps = con.prepareStatement(sql);

            ps.executeUpdate();

            //   System.out.println("le utilisateur de nom "+nom+" est supprimé !!!  ");

            JOptionPane.showMessageDialog(this,"machine 2  ( mono_couche ) de l'article de designation = " + designation +"  est supprimé avec succés  ");
            
            
            
    
            
               // remove table mono couche
               
               
            int rowCount = model3.getRowCount();
            //Remove rows one by one from the end of the table
            for (int i = rowCount - 1; i >= 0; i--) {
         model3.removeRow(i);
            }
            
            

        } catch (SQLException ex) {

            System.out.println(ex.getMessage());

        }

    
    }
    
    
    
    
    
    
    
    
    public void remplir_code_dossier(String designation) throws SQLException{
    
            
        String url;
        Connection con = null;
        try {
            Class.forName("com.mysql.jdbc.Driver");
            url="jdbc:mysql://localhost:3306/ahmed";
            con = DriverManager.getConnection(url,"root","Aminedridi11");
            //  System.out.println("mrigl");

        }
        catch (Exception e) {
            System.out.println(e.toString());
        }

            // login action

            Statement stm = con.createStatement();

           
           
            
         
            // check user
            
            ResultSet rs ; 
            
            String sql1 = "SELECT * FROM `article` WHERE designation =  '"+designation+"'";

            System.out.println(sql1);
            
            rs =  stm.executeQuery(sql1);
            
            

            //rs = stm.executeQuery("SELECT * FROM admin");

            while(rs.next()){
 
  
             txt_code_dossier.setText(rs.getString("code_dossier"));
           
            }
               
            
            
        
        
    }
    
    
    
        public void fill_combo_des() throws SQLException{
        
        
            
        String url;
        Connection con = null;
        try {
            Class.forName("com.mysql.jdbc.Driver");
            url="jdbc:mysql://localhost:3306/ahmed";
            con = DriverManager.getConnection(url,"root","Aminedridi11");
            //  System.out.println("mrigl");

        }
        catch (Exception e) {
            System.out.println(e.toString());
        }

            // login action

            Statement stm = con.createStatement();

           
           
            
         
            // check user
            
            ResultSet rs ; 
            
            String sql1 = "SELECT * FROM `article`  ";

            System.out.println(sql1);
            
            rs =  stm.executeQuery(sql1);
            
            

            //rs = stm.executeQuery("SELECT * FROM admin");

            while(rs.next()){
 
  
             combo_designation.addItem(rs.getString("designation"));
           
            }
               
            
            
            
        }
    
    
        
        
        
        
        
        private void remplir_vis1(String designation){
        
        
        ResultSet rs;
        String url;
        Connection con = null;
        try {
            Class.forName("com.mysql.jdbc.Driver");
            url="jdbc:mysql://localhost:3306/ahmed";
            con = DriverManager.getConnection(url,"root","Aminedridi11");
            //  System.out.println("mrigl");

        }
        catch (Exception e) {
            System.out.println(e.toString());
        }

        try {
            
            // login action

            Statement stm = con.createStatement();

      

            rs =  stm.executeQuery("SELECT * FROM `vis1` WHERE designation ='"+designation+"' ;");

            //rs = stm.executeQuery("SELECT * FROM admin");

            while(rs.next()){

                String quantite_vis1 = rs.getString("quantite_vis1");
              
                   String matiere1 = rs.getString("matiere1");
                   
                   String quantite_matiere1 = rs.getString("quantite_matiere1");
                   
                    String matiere2 = rs.getString("matiere2");
                    
                    String quantite_matiere2 = rs.getString("quantite_matiere2");
                    
                    String matiere3 = rs.getString("matiere3");
                    
                    String quantite_matiere3 = rs.getString("quantite_matiere3");
                    
                     String matiere4 = rs.getString("matiere4");
                    
                    String quantite_matiere4 = rs.getString("quantite_matiere4");
                  
                // remplir le tableau 
                
                
                
                 DefaultTableModel model2 = (DefaultTableModel) table_vis1.getModel();
       
       Object[] table = new Object[9];
   
            
      table[0] = quantite_vis1 ;
       
       table[1] = matiere1 ;

       
       table[2] = quantite_matiere1 ;   
       
          
       table[3] = matiere2 ;  
       
        table[4] = quantite_matiere2 ; 
        
        
         table[5] = matiere3 ; 
         
          table[6] = quantite_matiere3 ; 
          
          
           table[7] = matiere4 ; 
           
            table[8] = quantite_matiere4 ; 
       
          
       
      
       
       
       
       model2.addRow(table);
       

            }
        
        }
        
          catch (SQLException ex) {
            System.out.println(ex.getMessage());
        }
        
 
    }
        
        
        
        
        //  remplir vis 2
        
        
        
        
        
        private void remplir_vis2(String designation){
        
        
        ResultSet rs;
        String url;
        Connection con = null;
        try {
            Class.forName("com.mysql.jdbc.Driver");
            url="jdbc:mysql://localhost:3306/ahmed";
            con = DriverManager.getConnection(url,"root","Aminedridi11");
            //  System.out.println("mrigl");

        }
        catch (Exception e) {
            System.out.println(e.toString());
        }

        try {
            
            // login action

            Statement stm = con.createStatement();

      

            rs =  stm.executeQuery("SELECT * FROM `vis2` WHERE designation ='"+designation+"'");

            //rs = stm.executeQuery("SELECT * FROM admin");

            while(rs.next()){

                String quantite_vis2 = rs.getString("quantite_vis2");
              
                   String matiere1 = rs.getString("matiere1");
                   
                   String quantite_matiere1 = rs.getString("quantite_matiere1");
                   
                    String matiere2 = rs.getString("matiere2");
                    
                    String quantite_matiere2 = rs.getString("quantite_matiere2");
                    
                    String matiere3 = rs.getString("matiere3");
                    
                    String quantite_matiere3 = rs.getString("quantite_matiere3");
                    
                     String matiere4 = rs.getString("matiere4");
                    
                    String quantite_matiere4 = rs.getString("quantite_matiere4");
                  
                // remplir le tableau 
                
                
                
                 DefaultTableModel model2 = (DefaultTableModel) table_vis2.getModel();
       
       Object[] table = new Object[9];
   
            
      table[0] = quantite_vis2 ;
       
       table[1] = matiere1 ;

       
       table[2] = quantite_matiere1 ;   
       
          
       table[3] = matiere2 ;  
       
        table[4] = quantite_matiere2 ; 
        
        
         table[5] = matiere3 ; 
         
          table[6] = quantite_matiere3 ; 
          
          
           table[7] = matiere4 ; 
           
            table[8] = quantite_matiere4 ; 
       
          
       
      
       
       
       
       model2.addRow(table);
       

            }
        
        }
        
          catch (SQLException ex) {
            System.out.println(ex.getMessage());
        }
        
 
    }
        
        
        
        // remplir le tab vis3
        
        
        
        
        
        private void remplir_vis3(String designation){
        
        
        ResultSet rs;
        String url;
        Connection con = null;
        try {
            Class.forName("com.mysql.jdbc.Driver");
            url="jdbc:mysql://localhost:3306/ahmed";
            con = DriverManager.getConnection(url,"root","Aminedridi11");
            //  System.out.println("mrigl");

        }
        catch (Exception e) {
            System.out.println(e.toString());
        }

        try {
            
            // login action

            Statement stm = con.createStatement();

      

            rs =  stm.executeQuery("SELECT * FROM `vis3` WHERE designation ='"+designation+"'");

            //rs = stm.executeQuery("SELECT * FROM admin");

            while(rs.next()){

                String quantite_vis3 = rs.getString("quantite_vis3");
              
                   String matiere1 = rs.getString("matiere1");
                   
                   String quantite_matiere1 = rs.getString("quantite_matiere1");
                   
                    String matiere2 = rs.getString("matiere2");
                    
                    String quantite_matiere2 = rs.getString("quantite_matiere2");
                    
                    String matiere3 = rs.getString("matiere3");
                    
                    String quantite_matiere3 = rs.getString("quantite_matiere3");
                    
                     String matiere4 = rs.getString("matiere4");
                    
                    String quantite_matiere4 = rs.getString("quantite_matiere4");
                  
                // remplir le tableau 
                
                
                
                 DefaultTableModel model2 = (DefaultTableModel) table_vis3.getModel();
       
       Object[] table = new Object[9];
   
            
      table[0] = quantite_vis3 ;
       
       table[1] = matiere1 ;

       
       table[2] = quantite_matiere1 ;   
       
          
       table[3] = matiere2 ;  
       
        table[4] = quantite_matiere2 ; 
        
        
         table[5] = matiere3 ; 
         
          table[6] = quantite_matiere3 ; 
          
          
           table[7] = matiere4 ; 
           
            table[8] = quantite_matiere4 ; 
       
          
       
      
       
       
       
       model2.addRow(table);
       

            }
        
        }
        
          catch (SQLException ex) {
            System.out.println(ex.getMessage());
        }
        
 
    }
        
      
        
        // mono couche
        
        
        
        
        
        private void remplir_tab_mono_couche(String designation){
        
        
        ResultSet rs;
        String url;
        Connection con = null;
        try {
            Class.forName("com.mysql.jdbc.Driver");
            url="jdbc:mysql://localhost:3306/ahmed";
            con = DriverManager.getConnection(url,"root","Aminedridi11");
            //  System.out.println("mrigl");

        }
        catch (Exception e) {
            System.out.println(e.toString());
        }

        try {
            
            // login action

            Statement stm = con.createStatement();

      

            rs =  stm.executeQuery("SELECT * FROM `machine2` WHERE designation ='"+designation+"'");

            //rs = stm.executeQuery("SELECT * FROM admin");

            while(rs.next()){

                String matiere1 = rs.getString("matiere1");
              
                   String quantite_matiere1 = rs.getString("quantite_matiere1");
                   
                   String matiere2 = rs.getString("matiere2");
                   
                    String quantite_matiere2 = rs.getString("quantite_matiere2");
                    
                    String matiere3 = rs.getString("quantite_matiere3");
                    
                    String quantite_matiere3 = rs.getString("matiere3");
                    
                    String additif1 = rs.getString("additif1");
                    
                     String quantite_additif1 = rs.getString("quantite_additif1");
                    
                     
                     String additif2 = rs.getString("additif2");
                    
                     String quantite_additif2 = rs.getString("quantite_additif2");
                    
          
                     String colorant = rs.getString("colorant");
                     
                     String quantite_colorant = rs.getString("quantite_colorant");
                  
                // remplir le tableau 
                
                
                
                 DefaultTableModel model2 = (DefaultTableModel) table_mono_couche.getModel();
       
       Object[] table = new Object[12];
   
            
      table[0] = matiere1 ;
       
       table[1] = quantite_matiere1 ;

       
       table[2] = matiere2 ;   
       
          
       table[3] = quantite_matiere2 ;  
       
        table[4] = matiere3 ; 
        
        
         table[5] = quantite_matiere3 ; 
         
          table[6] = additif1 ; 
          
          
           table[7] = quantite_additif1 ; 
           
           
            table[8] = additif2 ; 
       
              table[9] = quantite_additif2 ; 
       
      
                table[10] = colorant ; 
                
                  table[11] = quantite_colorant ; 
              
       
       
       
       model2.addRow(table);
       

            }
        
        }
        
          catch (SQLException ex) {
            System.out.println(ex.getMessage());
        }
        
 
    }
        
        
        
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Consulter_articles.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Consulter_articles.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Consulter_articles.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Consulter_articles.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Consulter_articles().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(Consulter_articles.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel btn_supprimer;
    private javax.swing.JComboBox<String> combo_designation;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTable table_fournisseur;
    private javax.swing.JTable table_mono_couche;
    private javax.swing.JTable table_vis1;
    private javax.swing.JTable table_vis2;
    private javax.swing.JTable table_vis3;
    private javax.swing.JTextField txt_code_dossier;
    // End of variables declaration//GEN-END:variables
}
