/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package swing;

import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;
import swing.macros.Macro;

/**
 *
 * @author dridi family
 */
public class Gestion_commandes extends javax.swing.JFrame {

     JTextField txt_des;
    
    public JPanel getPanel_commande() {
        return panel_commande;
    }

    public void setPanel_commande(JPanel panel_commande) {
        this.panel_commande = panel_commande;
    }

    /**
     * Creates new form Gestion_commandes
     */
    public Gestion_commandes() throws SQLException, SQLException {
        initComponents();
        
            
        
        // check box
        
        
        check_prod.setBackground(panel_utilisateur.getBackground());
        
        
        date_inf.setVisible(false);
        
        date_sup.setVisible(false);
        
        
        
       remplir_users_tab();
       
        fill_combo_des();
        
         fill_combo_client();
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel_commande = new javax.swing.JPanel();
        txt_date = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table_commande = new javax.swing.JTable();
        txt_recherche = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        panel_utilisateur = new javax.swing.JPanel();
        panel_matricule4 = new javax.swing.JPanel();
        jLabel39 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        txt_quantite = new javax.swing.JTextField();
        panel_matricule6 = new javax.swing.JPanel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        combo_des = new javax.swing.JComboBox<>();
        panel_matricule8 = new javax.swing.JPanel();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel51 = new javax.swing.JLabel();
        jLabel52 = new javax.swing.JLabel();
        jLabel53 = new javax.swing.JLabel();
        jLabel54 = new javax.swing.JLabel();
        combo_client = new javax.swing.JComboBox<>();
        btn_modifier = new javax.swing.JButton();
        btn_supprimer = new javax.swing.JButton();
        panel_matricule5 = new javax.swing.JPanel();
        jLabel45 = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        jLabel47 = new javax.swing.JLabel();
        jLabel48 = new javax.swing.JLabel();
        jLabel49 = new javax.swing.JLabel();
        jLabel50 = new javax.swing.JLabel();
        date_lancement = new com.toedter.calendar.JDateChooser();
        panel_matricule7 = new javax.swing.JPanel();
        jLabel55 = new javax.swing.JLabel();
        jLabel56 = new javax.swing.JLabel();
        jLabel57 = new javax.swing.JLabel();
        jLabel58 = new javax.swing.JLabel();
        jLabel59 = new javax.swing.JLabel();
        jLabel60 = new javax.swing.JLabel();
        date_exigée = new com.toedter.calendar.JDateChooser();
        jLabel37 = new javax.swing.JLabel();
        check_prod = new javax.swing.JCheckBox();
        panel_matricule9 = new javax.swing.JPanel();
        jLabel61 = new javax.swing.JLabel();
        jLabel62 = new javax.swing.JLabel();
        jLabel63 = new javax.swing.JLabel();
        jLabel64 = new javax.swing.JLabel();
        jLabel65 = new javax.swing.JLabel();
        jLabel66 = new javax.swing.JLabel();
        combo_status = new javax.swing.JComboBox<>();
        btn_ajouter = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        lbl_date_filter = new javax.swing.JLabel();
        date_inf = new com.toedter.calendar.JDateChooser();
        date_sup = new com.toedter.calendar.JDateChooser();
        lbl_filter = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        panel_commande.setBackground(new java.awt.Color(255, 255, 255));

        txt_date.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        txt_date.setForeground(new java.awt.Color(102, 102, 102));

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/swing/images/login.PNG"))); // NOI18N

        jLabel17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/swing/images/logout.PNG"))); // NOI18N

        jScrollPane1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));

        table_commande.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        table_commande.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "designation", "client", "quantite", "date_lancement", "date_exigée", "status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table_commande.setGridColor(new java.awt.Color(255, 255, 255));
        table_commande.setRowHeight(22);
        table_commande.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table_commandeMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table_commande);
        if (table_commande.getColumnModel().getColumnCount() > 0) {
            table_commande.getColumnModel().getColumn(0).setResizable(false);
            table_commande.getColumnModel().getColumn(1).setResizable(false);
            table_commande.getColumnModel().getColumn(2).setResizable(false);
            table_commande.getColumnModel().getColumn(3).setResizable(false);
            table_commande.getColumnModel().getColumn(4).setResizable(false);
            table_commande.getColumnModel().getColumn(5).setResizable(false);
        }

        txt_recherche.setBackground(new java.awt.Color(123, 156, 225));
        txt_recherche.setForeground(new java.awt.Color(255, 255, 255));
        txt_recherche.setBorder(null);
        txt_recherche.setCaretColor(new java.awt.Color(255, 255, 255));
        txt_recherche.setPreferredSize(new java.awt.Dimension(2, 20));
        txt_recherche.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_rechercheActionPerformed(evt);
            }
        });
        txt_recherche.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_rechercheKeyTyped(evt);
            }
        });

        jLabel1.setForeground(new java.awt.Color(51, 153, 255));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/swing/images/search-icon.png"))); // NOI18N
        jLabel1.setText("search");

        panel_utilisateur.setBackground(new java.awt.Color(120, 168, 252));
        panel_utilisateur.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panel_matricule4.setBackground(new java.awt.Color(84, 127, 206));

        jLabel44.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel44.setText("quantite :");

        javax.swing.GroupLayout panel_matricule4Layout = new javax.swing.GroupLayout(panel_matricule4);
        panel_matricule4.setLayout(panel_matricule4Layout);
        panel_matricule4Layout.setHorizontalGroup(
            panel_matricule4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_matricule4Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel42)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel_matricule4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_matricule4Layout.createSequentialGroup()
                        .addComponent(txt_quantite, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35)
                        .addComponent(jLabel43)
                        .addGap(28, 28, 28)
                        .addComponent(jLabel39)
                        .addGap(45, 45, 45)
                        .addComponent(jLabel40)
                        .addGap(85, 85, 85)
                        .addComponent(jLabel41))
                    .addComponent(jLabel44, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        panel_matricule4Layout.setVerticalGroup(
            panel_matricule4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(panel_matricule4Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(panel_matricule4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel41, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel40, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel39, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel43, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(7, 7, 7)
                .addComponent(jLabel42, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(panel_matricule4Layout.createSequentialGroup()
                .addComponent(jLabel44, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_quantite, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panel_utilisateur.add(panel_matricule4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 150, 270, 60));

        panel_matricule6.setBackground(new java.awt.Color(84, 127, 206));

        jLabel36.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel36.setText("designation :");

        combo_des.setBackground(new java.awt.Color(0, 22, 51));

        javax.swing.GroupLayout panel_matricule6Layout = new javax.swing.GroupLayout(panel_matricule6);
        panel_matricule6.setLayout(panel_matricule6Layout);
        panel_matricule6Layout.setHorizontalGroup(
            panel_matricule6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_matricule6Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(panel_matricule6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel26)
                    .addGroup(panel_matricule6Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(panel_matricule6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panel_matricule6Layout.createSequentialGroup()
                                .addComponent(combo_des, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(110, 110, 110)
                                .addComponent(jLabel35)
                                .addGap(28, 28, 28)
                                .addComponent(jLabel23)
                                .addGap(45, 45, 45)
                                .addComponent(jLabel24)
                                .addGap(85, 85, 85)
                                .addComponent(jLabel25))
                            .addComponent(jLabel36, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panel_matricule6Layout.setVerticalGroup(
            panel_matricule6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_matricule6Layout.createSequentialGroup()
                .addComponent(jLabel36)
                .addGroup(panel_matricule6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panel_matricule6Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(panel_matricule6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel25, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel24, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel23, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel35, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, 0)
                        .addComponent(jLabel26, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(panel_matricule6Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(combo_des, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 3, Short.MAX_VALUE))))
        );

        panel_utilisateur.add(panel_matricule6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, 270, 50));

        panel_matricule8.setBackground(new java.awt.Color(84, 127, 206));

        jLabel54.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel54.setText("client :");

        combo_client.setBackground(new java.awt.Color(0, 22, 51));
        combo_client.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_clientActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panel_matricule8Layout = new javax.swing.GroupLayout(panel_matricule8);
        panel_matricule8.setLayout(panel_matricule8Layout);
        panel_matricule8Layout.setHorizontalGroup(
            panel_matricule8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_matricule8Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(panel_matricule8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_matricule8Layout.createSequentialGroup()
                        .addComponent(combo_client, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(24, 24, 24)
                        .addGroup(panel_matricule8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panel_matricule8Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel53)
                                .addGap(28, 28, 28)
                                .addComponent(jLabel33)
                                .addGap(45, 45, 45)
                                .addComponent(jLabel34)
                                .addGap(85, 85, 85)
                                .addComponent(jLabel51))
                            .addGroup(panel_matricule8Layout.createSequentialGroup()
                                .addComponent(jLabel52)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(270, 270, 270))
                    .addGroup(panel_matricule8Layout.createSequentialGroup()
                        .addComponent(jLabel54, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        panel_matricule8Layout.setVerticalGroup(
            panel_matricule8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_matricule8Layout.createSequentialGroup()
                .addComponent(jLabel54)
                .addGroup(panel_matricule8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_matricule8Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(panel_matricule8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel51, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel34, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel33, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel53, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, 0)
                        .addComponent(jLabel52, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(panel_matricule8Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(combo_client, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31))))
        );

        panel_utilisateur.add(panel_matricule8, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, 270, 50));

        btn_modifier.setBackground(new java.awt.Color(255, 255, 255));
        btn_modifier.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btn_modifier.setForeground(new java.awt.Color(51, 102, 255));
        btn_modifier.setText("modifier");
        btn_modifier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_modifierActionPerformed(evt);
            }
        });
        panel_utilisateur.add(btn_modifier, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 460, 90, 20));

        btn_supprimer.setBackground(new java.awt.Color(255, 255, 255));
        btn_supprimer.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btn_supprimer.setForeground(new java.awt.Color(51, 102, 255));
        btn_supprimer.setText("supprimer");
        btn_supprimer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_supprimerActionPerformed(evt);
            }
        });
        panel_utilisateur.add(btn_supprimer, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 460, 100, 20));

        panel_matricule5.setBackground(new java.awt.Color(84, 127, 206));

        jLabel50.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel50.setText("date de lancement :");

        date_lancement.setBackground(new java.awt.Color(102, 153, 255));

        javax.swing.GroupLayout panel_matricule5Layout = new javax.swing.GroupLayout(panel_matricule5);
        panel_matricule5.setLayout(panel_matricule5Layout);
        panel_matricule5Layout.setHorizontalGroup(
            panel_matricule5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_matricule5Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel48)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel_matricule5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_matricule5Layout.createSequentialGroup()
                        .addComponent(jLabel50, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(131, 131, 131)
                        .addComponent(jLabel49)
                        .addGap(28, 28, 28)
                        .addComponent(jLabel45)
                        .addGap(45, 45, 45)
                        .addComponent(jLabel46)
                        .addGap(85, 85, 85)
                        .addComponent(jLabel47))
                    .addComponent(date_lancement, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panel_matricule5Layout.setVerticalGroup(
            panel_matricule5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_matricule5Layout.createSequentialGroup()
                .addGroup(panel_matricule5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_matricule5Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(panel_matricule5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel47, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel46, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel45, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel49, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(panel_matricule5Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel50)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel_matricule5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_matricule5Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(date_lancement, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(16, 16, 16))
                    .addComponent(jLabel48, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        panel_utilisateur.add(panel_matricule5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 220, 270, 70));

        panel_matricule7.setBackground(new java.awt.Color(84, 127, 206));

        jLabel60.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel60.setText("date exigée :");

        date_exigée.setBackground(new java.awt.Color(102, 153, 255));

        javax.swing.GroupLayout panel_matricule7Layout = new javax.swing.GroupLayout(panel_matricule7);
        panel_matricule7.setLayout(panel_matricule7Layout);
        panel_matricule7Layout.setHorizontalGroup(
            panel_matricule7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_matricule7Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel58)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel_matricule7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_matricule7Layout.createSequentialGroup()
                        .addComponent(jLabel60, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(135, 135, 135)
                        .addComponent(jLabel59)
                        .addGap(28, 28, 28)
                        .addComponent(jLabel55)
                        .addGap(45, 45, 45)
                        .addComponent(jLabel56)
                        .addGap(85, 85, 85)
                        .addComponent(jLabel57))
                    .addComponent(date_exigée, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panel_matricule7Layout.setVerticalGroup(
            panel_matricule7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_matricule7Layout.createSequentialGroup()
                .addGroup(panel_matricule7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_matricule7Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(panel_matricule7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel57, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel56, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel55, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel59, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(panel_matricule7Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel60)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel_matricule7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(date_exigée, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel58, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        panel_utilisateur.add(panel_matricule7, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 300, 270, 70));

        jLabel37.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel37.setText("nouveau produit ");
        panel_utilisateur.add(jLabel37, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 0, 134, -1));

        check_prod.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                check_prodItemStateChanged(evt);
            }
        });
        panel_utilisateur.add(check_prod, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 0, -1, -1));

        panel_matricule9.setBackground(new java.awt.Color(84, 127, 206));

        jLabel66.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel66.setText("status :");

        combo_status.setBackground(new java.awt.Color(0, 22, 51));
        combo_status.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "en attente", "en prod", "ferme", "previsionelle" }));

        javax.swing.GroupLayout panel_matricule9Layout = new javax.swing.GroupLayout(panel_matricule9);
        panel_matricule9.setLayout(panel_matricule9Layout);
        panel_matricule9Layout.setHorizontalGroup(
            panel_matricule9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_matricule9Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel64)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel_matricule9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_matricule9Layout.createSequentialGroup()
                        .addComponent(jLabel66, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(135, 135, 135)
                        .addComponent(jLabel65)
                        .addGap(28, 28, 28)
                        .addComponent(jLabel61)
                        .addGap(45, 45, 45)
                        .addComponent(jLabel62)
                        .addGap(85, 85, 85)
                        .addComponent(jLabel63))
                    .addComponent(combo_status, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panel_matricule9Layout.setVerticalGroup(
            panel_matricule9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_matricule9Layout.createSequentialGroup()
                .addGroup(panel_matricule9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_matricule9Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(panel_matricule9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel63, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel62, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel61, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel65, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(panel_matricule9Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel66, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel_matricule9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel64, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(panel_matricule9Layout.createSequentialGroup()
                        .addComponent(combo_status, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 11, Short.MAX_VALUE))))
        );

        panel_utilisateur.add(panel_matricule9, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 380, 270, 70));

        btn_ajouter.setBackground(new java.awt.Color(255, 255, 255));
        btn_ajouter.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btn_ajouter.setForeground(new java.awt.Color(51, 102, 255));
        btn_ajouter.setText("ajouter");
        btn_ajouter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ajouterActionPerformed(evt);
            }
        });
        panel_utilisateur.add(btn_ajouter, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 460, 80, 20));

        jLabel7.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(51, 153, 255));
        jLabel7.setText("gestion des commandes");

        lbl_date_filter.setForeground(new java.awt.Color(102, 102, 102));
        lbl_date_filter.setIcon(new javax.swing.ImageIcon(getClass().getResource("/swing/images/filter_icon.png"))); // NOI18N
        lbl_date_filter.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lbl_date_filterMousePressed(evt);
            }
        });

        date_inf.setBackground(new java.awt.Color(51, 153, 255));

        date_sup.setBackground(new java.awt.Color(102, 153, 255));

        lbl_filter.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        lbl_filter.setForeground(new java.awt.Color(102, 102, 102));
        lbl_filter.setText("date filter");
        lbl_filter.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbl_filterMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout panel_commandeLayout = new javax.swing.GroupLayout(panel_commande);
        panel_commande.setLayout(panel_commandeLayout);
        panel_commandeLayout.setHorizontalGroup(
            panel_commandeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_commandeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel_commandeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_commandeLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(panel_commandeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(panel_commandeLayout.createSequentialGroup()
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txt_date, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(panel_commandeLayout.createSequentialGroup()
                        .addComponent(panel_utilisateur, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(panel_commandeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panel_commandeLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 387, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(panel_commandeLayout.createSequentialGroup()
                                .addGroup(panel_commandeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(panel_commandeLayout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txt_recherche, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(panel_commandeLayout.createSequentialGroup()
                                        .addGap(172, 172, 172)
                                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(panel_commandeLayout.createSequentialGroup()
                                        .addGap(39, 39, 39)
                                        .addGroup(panel_commandeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(panel_commandeLayout.createSequentialGroup()
                                                .addComponent(lbl_date_filter, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(lbl_filter, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(date_inf, javax.swing.GroupLayout.DEFAULT_SIZE, 131, Short.MAX_VALUE)
                                            .addComponent(date_sup, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                                .addGap(124, 124, 124))))))
        );
        panel_commandeLayout.setVerticalGroup(
            panel_commandeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_commandeLayout.createSequentialGroup()
                .addGroup(panel_commandeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_commandeLayout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(jLabel7)
                        .addGap(56, 56, 56)
                        .addGroup(panel_commandeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl_filter, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_date_filter))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(date_inf, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(date_sup, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addGroup(panel_commandeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_recherche, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panel_commandeLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(panel_utilisateur, javax.swing.GroupLayout.PREFERRED_SIZE, 492, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(224, 224, 224)
                .addComponent(txt_date, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(499, 499, 499)
                .addGroup(panel_commandeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jLabel17))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panel_commande, javax.swing.GroupLayout.PREFERRED_SIZE, 722, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panel_commande, javax.swing.GroupLayout.PREFERRED_SIZE, 529, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txt_rechercheActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_rechercheActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_rechercheActionPerformed

    private void btn_supprimerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_supprimerActionPerformed
       
      
        //supp
        
        
        if ( check_prod.isSelected() == false ){
        
            String url;  
            Connection con = null;  
            try {  
                Class.forName("com.mysql.jdbc.Driver");  
            url="jdbc:mysql://localhost:3306/ahmed";  
                con = DriverManager.getConnection(url,"root","Aminedridi11");  
              //  System.out.println("mrigl");  
              
                }  
                catch (Exception e) {  
                System.out.println(e.toString());  
            }
            
        try {
            // login action
            
            Statement stm = con.createStatement();
            
            //execute query
            
            // input pour l'update celon la matricule
        
            
           String designation = combo_des.getSelectedItem().toString();
           
          
            
            //UPDATE client SET rue = '49 Rue Ameline',ville = 'Saint-Eustache-la-Forêt',code_postal = '76210' WHERE id = 2
        
              
         String sql =" DELETE FROM commande WHERE designation ='"+designation+"'" ;       
         System.out.println(sql);
         
        
         
        PreparedStatement ps = con.prepareStatement(sql);
         
          ps.executeUpdate();
  
         
      //   System.out.println("le utilisateur de nom "+nom+" est supprimé !!!  ");
         
         JOptionPane.showMessageDialog(this,"la commande est supprimé avec succés  ");
       
       
     
   
        } catch (SQLException ex) {
            
            System.out.println(ex.getMessage());
            
        }
        
        // supprimer la ligne selectionnée dans jtbale
        
         int SelectedRowIndex = table_commande.getSelectedRow();
            
            
                
                 DefaultTableModel model2 = (DefaultTableModel) table_commande.getModel();
                 // effacer la ligne selectionnée
                 
                 
                 model2.removeRow(SelectedRowIndex);
                 
                 
            try {
                //  txt_ref.setText("");  txt_quantite.setText(""); txt_des.setText("");
                
                
                // macro de suppression commande ( ancien prod = nouveau prod ) -> meme macro
                
                
                Macro.macro_suppresion_commande1();
                
                
               Macro.macro_suppresion_commande2();
                
                
            } catch (IOException ex) {
                Logger.getLogger(Gestion_commandes.class.getName()).log(Level.SEVERE, null, ex);
            }
               
               
        
        }
        
        else{
        
        
                 String url;  
            Connection con = null;  
            try {  
                Class.forName("com.mysql.jdbc.Driver");  
            url="jdbc:mysql://localhost:3306/ahmed";  
                con = DriverManager.getConnection(url,"root","Aminedridi11");  
              //  System.out.println("mrigl");  
              
                }  
                catch (Exception e) {  
                System.out.println(e.toString());  
            }
            
        try {
            // login action
            
            Statement stm = con.createStatement();
            
            //execute query
            
            // input pour l'update celon la matricule
        
            
           String designation = txt_des.getText();
           
          
            
            //UPDATE client SET rue = '49 Rue Ameline',ville = 'Saint-Eustache-la-Forêt',code_postal = '76210' WHERE id = 2
        
              
         String sql =" DELETE FROM commande WHERE designation ='"+designation+"'" ;       
         System.out.println(sql);
         
        
         
        PreparedStatement ps = con.prepareStatement(sql);
         
          ps.executeUpdate();
  
         
      //   System.out.println("le utilisateur de nom "+nom+" est supprimé !!!  ");
         
         JOptionPane.showMessageDialog(this,"la commande est supprimé avec succés  ");
       
       
     
   
        } catch (SQLException ex) {
            
            System.out.println(ex.getMessage());
            
        }
        
        // supprimer la ligne selectionnée dans jtbale
        
         int SelectedRowIndex = table_commande.getSelectedRow();
            
            
                
                 DefaultTableModel model2 = (DefaultTableModel) table_commande.getModel();
                 // effacer la ligne selectionnée
                 
                 
                 model2.removeRow(SelectedRowIndex);
                 
                 
               //  txt_ref.setText("");  txt_quantite.setText(""); txt_des.setText(""); 
    
            
            
                        
            try {
                //  txt_ref.setText("");  txt_quantite.setText(""); txt_des.setText("");
                
                
                // macro de suppression commande ( ancien prod = nouveau prod ) -> meme macro
                
                
                Macro.macro_suppresion_commande1();
                
                
               Macro.macro_suppresion_commande2();
                
                
            } catch (IOException ex) {
                Logger.getLogger(Gestion_commandes.class.getName()).log(Level.SEVERE, null, ex);
            }
               
               
               
               
        }
        
        
    }//GEN-LAST:event_btn_supprimerActionPerformed

    private void lbl_date_filterMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbl_date_filterMousePressed
        // mouse press date filter
        
        if ( date_inf.isVisible()==true && date_sup.isVisible()==true ){
        
            date_inf.setVisible(false);
            date_sup.setVisible(false);
            
        }
        
        else{
        
            date_inf.setVisible(true);
            date_sup.setVisible(true);
        }
        
    }//GEN-LAST:event_lbl_date_filterMousePressed

    private void check_prodItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_check_prodItemStateChanged
        if ( check_prod.isSelected()==true ){
        System.out.println("cb1 is selected");
        
        combo_des.setVisible(false);
        
        
       txt_des = new JTextField();
        
        txt_des.setLocation( combo_des.getLocation() );
        
        txt_des.setSize( combo_des.getSize());
        
        txt_des.setPreferredSize( combo_des.getPreferredSize() );
        
        txt_des.setAlignmentX( combo_des.getAlignmentX() );
        
        txt_des.setAlignmentY( combo_des.getAlignmentY() );
        

        this.panel_matricule6.add(txt_des);
        
        
        txt_des.setVisible(true);
        }
        
        else{
        System.out.println("cb1 is not selected");
        
        txt_des.setVisible(false);
        
        combo_des.setVisible(true);
        
        }
    }//GEN-LAST:event_check_prodItemStateChanged

    private void combo_clientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_clientActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_combo_clientActionPerformed

    
    public boolean designation_unique(String designation) throws SQLException{
    
    
    
            
        String url;
        Connection con = null;
        try {
            Class.forName("com.mysql.jdbc.Driver");
            url="jdbc:mysql://localhost:3306/ahmed";
            con = DriverManager.getConnection(url,"root","Aminedridi11");
            //  System.out.println("mrigl");

        }
        catch (Exception e) {
            System.out.println(e.toString());
        }

            // login action

            Statement stm = con.createStatement();

           
           
            
         
            // check user
            
            ResultSet rs ; 
            
            String sql1 = "SELECT * FROM `commande`  ";

            System.out.println(sql1);
            
            rs =  stm.executeQuery(sql1);
            
            boolean test = false ;

            //rs = stm.executeQuery("SELECT * FROM admin");

            while(rs.next()){
 
                    if ( rs.getString("designation").equals(designation) ){
           
                    JOptionPane.showMessageDialog(this, " attention ! la designation doit etre unique !!! ");
                    
                    test = true ;
                    
                    System.out.println(" desingation mawjouda deja ");
                    
                    break ;
                    
                    }
                    
                    else{
                    test = false ;
                    
                    System.out.println(" designation jdida ");
                    }
                    
                    
            }
               
            
            return test ;
    
    }
    
    
    
    private void btn_ajouterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ajouterActionPerformed
       // btn ajouter
       
       
       
       // condition 1  : designation unique
       
       
         
       
       
       
        
          // btouon enregistrer ( inserer )
        
          // date format
           
           DateFormat df = new SimpleDateFormat("yyyy-MM-dd");
          
          String designation = combo_des.getSelectedItem().toString();
         
          String client = combo_client.getSelectedItem().toString();
          
          String quantite = txt_quantite.getText();
          
          String date_de_lancement = df.format( date_lancement.getDate() );
          
           String date_exigé = df.format( date_exigée.getDate() );
          
           
           String status = "en attente";
          
           
          // si combo desi est selectionne
          
          
         if ( check_prod.isSelected() == false ){
           
             try{
                 
                 
             if ( designation_unique(combo_des.getSelectedItem().toString() ) == true ){
             
                 // des non unique 
                 
                 System.out.println("deignation non unique");
                  
                 }
             
             //else
             
             else{
             
       String url;  
            Connection con = null;  
            try {  
                Class.forName("com.mysql.jdbc.Driver");  
            url="jdbc:mysql://localhost:3306/ahmed";  
                con = DriverManager.getConnection(url,"root","Aminedridi11");  
              //  System.out.println("mrigl");  
              
                }  
                catch (Exception e) {  
                System.out.println(e.toString());  
            }
            
        try {
            // login action
            
            Statement stm = con.createStatement();
            
            //execute query

         
         String sql =" INSERT INTO commande (designation,client,quantite,date_lancement,date_exigée,status) VALUES ('"+designation+"','"+client+"','"+quantite+"','"+date_de_lancement+"','"+date_exigé+"','" +status+"') " ;       
     
         System.out.println(sql);
      
         
        PreparedStatement ps = con.prepareStatement(sql);
         
          ps.executeUpdate();
  
         
         
         JOptionPane.showMessageDialog(this,"la commande est ajouté avec succés ");
         
       
       
     
   
       // remplir le tab avec nouveau utilisateur
       
    
                
                 DefaultTableModel model3 = (DefaultTableModel) table_commande.getModel();
       
                 
                 
       Object[] table = new Object[6];
   
               
      table[0] = designation ;
       
       table[1] = client ;

       
       table[2] = quantite ;   
       
          
       table[3] = date_de_lancement ;  
       
          
       table[4] = date_exigé ; 
       
        table[5] = status ; 
      
       
                 
       
       model3.addRow(table);
       
       
       
       // macro de creation du commande (ancien produit )
       
       Macro.macro_commande1();
       
       Macro.macro_commande2();
       
      
      
        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
        }
        
         }
             
             }
             catch(Exception ex){
             System.out.println(ex.getMessage());
             }
          
         }
         
         
         
         
         
         else {
         
         // check box nv prod  =  true ( check_prod is selected = true )
        
          try{
              
              
        
         if ( designation_unique(txt_des.getText()) == true ){
         
             // des non unique
             
             System.out.println(" designation non unique ");
             
         }
         
         
         
         // else 
         
         
         
          else{
         
       String url;  
            Connection con = null;  
            try {  
                Class.forName("com.mysql.jdbc.Driver");  
            url="jdbc:mysql://localhost:3306/ahmed";  
                con = DriverManager.getConnection(url,"root","Aminedridi11");  
              //  System.out.println("mrigl");  
              
                }  
                catch (Exception e) {  
                System.out.println(e.toString());  
            }
            
        try {
            // login action
            
            Statement stm = con.createStatement();
            
            //execute query

         
         String sql =" INSERT INTO commande (designation,client,quantite,date_lancement,date_exigée,status) VALUES ('"+txt_des.getText()+" ',' "+client+"','"+quantite+"','"+date_de_lancement+"','"+date_exigé+"','" +status+"') " ;       
     
         System.out.println(sql);
      
         
        PreparedStatement ps = con.prepareStatement(sql);
         
          ps.executeUpdate();
  
         
         
         JOptionPane.showMessageDialog(this,"la commande est ajouté avec succés ");
         
       
       
     
   
       // remplir le tab avec nouveau utilisateur
       
    
                
                 DefaultTableModel model3 = (DefaultTableModel) table_commande.getModel();
       
                 
                 
       Object[] table = new Object[6];
   
               
      table[0] = txt_des.getText() ;
       
       table[1] = client ;

       
       table[2] = quantite ;   
       
          
       table[3] = date_de_lancement ;  
       
          
       table[4] = date_exigé ; 
       
        table[5] = status ; 
      
       
                 
       
       model3.addRow(table);
       
  
              
        // macro mail commande ( nouveau produit )
        
        
        Macro.macro_commande_notif();
        
        
        
        } catch (Exception ex) {
            
        System.out.println(ex.getMessage());
            
            
        } 
        
        
        this.dispose();
         
         }
        
         
         
         }
         catch(Exception ex){
                 System.out.println(ex.getMessage());
                 }
         
          
        
    
         }
        
    }//GEN-LAST:event_btn_ajouterActionPerformed

    private void btn_modifierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_modifierActionPerformed
     
        supprimer_commande();
        inserer_commande();
        
        
    }//GEN-LAST:event_btn_modifierActionPerformed

    private void table_commandeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table_commandeMouseClicked
        
        // tabel client mouse clicked
        
        
         // table mouse clicked
        
        
        DefaultTableModel model3 = (DefaultTableModel) table_commande.getModel();
        
        int SelectedRowIndex = table_commande.getSelectedRow();
        
        
        
       // txt_ref.setText(model3.getValueAt(SelectedRowIndex, 0).toString());
       
       combo_des.setSelectedItem(model3.getValueAt(SelectedRowIndex, 0).toString());
        
        // txt_des.setText(model3.getValueAt(SelectedRowIndex, 1).toString());
        
        combo_client.setSelectedItem(model3.getValueAt(SelectedRowIndex, 1).toString());
        
       
        
        txt_quantite.setText(model3.getValueAt(SelectedRowIndex, 2).toString());
        
       //  txt_quantite.setText(model3.getValueAt(SelectedRowIndex, 2).toString());
       
      // date_lancement.setDate(date);
         
            
           DateFormat df = new SimpleDateFormat("yyyy-MM-dd");
        
        try {
            Date d1 = df.parse(model3.getValueAt(SelectedRowIndex, 3).toString());
            
            //  txt_tel.setText(model3.getValueAt(SelectedRowIndex, 2).toString());
            
            date_lancement.setDate(d1);
            
            
             Date d2 = df.parse(model3.getValueAt(SelectedRowIndex, 4).toString());
            
            //  txt_tel.setText(model3.getValueAt(SelectedRowIndex, 2).toString());
            
            date_exigée.setDate(d2);
            
            
            
            
            
            
            
        } catch (ParseException ex) {
           System.out.println(ex.getMessage());
        }
       
        
    }//GEN-LAST:event_table_commandeMouseClicked

    private void lbl_filterMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbl_filterMouseClicked
        
        
        
            
           DateFormat df = new SimpleDateFormat("yyyy-MM-dd");
        
           // date inf
           
          String date_inferieur = df.format( date_inf.getDate() );
        
        
          
          System.out.println("annee de date inf = " +  date_inferieur.substring(2, 4) );
        
         System.out.println("mois de date sup = " +  date_inferieur.substring(5, 7) );
        
        
         System.out.println("jour de date inf = " +  date_inferieur.substring(8, 10) );
        
         
         String annee_inf = date_inferieur.substring(2, 4) ;
         
         String mois_inf = date_inferieur.substring(5, 7);
         
         String jour_inf =  date_inferieur.substring(8, 10);
         
         
         // date sup
           
          String date_superieur = df.format( date_sup.getDate() );
        
        
          
          System.out.println("annee de date sup = " +  date_superieur.substring(2, 4) );
        
         System.out.println("mois de date sup = " +  date_superieur.substring(5, 7) );
        
        
         System.out.println("jour de date sup = " +  date_superieur.substring(8, 10) );
        
         
         String annee_sup = date_superieur.substring(2, 4);
         
         
         String mois_sup =  date_superieur.substring(5, 7);
         
         String jour_sup =  date_superieur.substring(8, 10);
         
         
         // si date_inf < date_sup
         
         
         if ( (Integer.parseInt(annee_inf) < Integer.parseInt(annee_sup) ) || (Integer.parseInt(mois_inf) < Integer.parseInt(mois_sup) )|| Integer.parseInt(jour_inf) < Integer.parseInt(jour_sup) ) {
         
         
             date_filter(date_inferieur,date_superieur);
             
             System.out.println("  date inf(gauche) < dat sup (droite) ");
             
         }
         
         else {
         System.out.println("le");
         
         }
        
        
    }//GEN-LAST:event_lbl_filterMouseClicked

    private void txt_rechercheKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_rechercheKeyTyped
       // txt recherche key typed
        
        
          //  System.out.println(" you typed " + txt_recherche.getText());
        
           
            
            txt_recherche.getDocument().addDocumentListener(new DocumentListener(){
            
                @Override
                public void insertUpdate(DocumentEvent de) {
                   System.out.println(" insert  " + txt_recherche.getText());
                   recherche(txt_recherche.getText());
                }

                @Override
                public void removeUpdate(DocumentEvent de) {
                    System.out.println(" update  " + txt_recherche.getText());
                    recherche(txt_recherche.getText());
                }

                @Override
                public void changedUpdate(DocumentEvent de) {
                  System.out.println(" delete  " + txt_recherche.getText());
                  recherche(txt_recherche.getText());
                }
            
                });
            
    }//GEN-LAST:event_txt_rechercheKeyTyped

    
    

    public void recherche(String text){
    
        
        String url;
        Connection con = null;
        try {
            Class.forName("com.mysql.jdbc.Driver");
            url="jdbc:mysql://localhost:3306/ahmed";
            con = DriverManager.getConnection(url,"root","Aminedridi11");
            //  System.out.println("mrigl");

        }
        catch (Exception e) {
            System.out.println(e.toString());
        }

        try {
            // login action

            Statement stm = con.createStatement();

      
            
            
               // effacer le tab
                
                
                DefaultTableModel dm = (DefaultTableModel) table_commande.getModel();
            int rowCount = dm.getRowCount();
            //Remove rows one by one from the end of the table
            for (int i = rowCount - 1; i >= 0; i--) {
         dm.removeRow(i);
            }
                
            
            
            
            
         
            // check user
            
            ResultSet rs ; 
            
            String sql1 = " SELECT * FROM `commande` WHERE designation like '%"+text+"%' or client like '%"+ text +"%' or quantite LIKE '%"+text+"%'  or date_lancement LIKE '%"+text+"%'  or date_exigée LIKE '%"+text+"%' or status LIKE '%"+text+"%' ;"   ;

            System.out.println(sql1);
            
            rs =  stm.executeQuery(sql1);
            
            

            while(rs.next()){
                
             
            
                // remplir le tableau  avec la req select

                
                 String designation = rs.getString("designation");
                String client = rs.getString("client");
          
              String quantite = rs.getString("quantite");

              
              String date_de_lancement = rs.getString("date_lancement");
              
              String date_exigée = rs.getString("date_exigée");
              
              String status = rs.getString("status");
              
                
                System.out.println(" info === " +  designation  + client +   quantite + date_de_lancement  +   date_exigée + status );
  

                // remplir le tableau 
                
               
       
       Object[] table = new Object[6];
   
               
      table[0] = designation;
       
       table[1] = client;

       
       table[2] = quantite;  
       
       table[3] = date_de_lancement; 
       
       table[4] = date_exigée; 
       
       table[5] = status; 
         
       
  
       
       dm.addRow(table);
       

            
           
            }
               
    }                                        

        catch(Exception ex){
            System.out.println(ex.getMessage());
        } 
        
        
    
    }
    
    
    
    
    
    
        // fonction pour remplir le tableau des utilisateurs
        
        
        private void remplir_users_tab(){
        
        
        ResultSet rs;
        String url;
        Connection con = null;
        try {
            Class.forName("com.mysql.jdbc.Driver");
            url="jdbc:mysql://localhost:3306/ahmed";
            con = DriverManager.getConnection(url,"root","Aminedridi11");
            //  System.out.println("mrigl");

        }
        catch (Exception e) {
            System.out.println(e.toString());
        }

        try {
            // login action

            Statement stm = con.createStatement();

      

            rs =  stm.executeQuery("SELECT * FROM `commande`");

            //rs = stm.executeQuery("SELECT * FROM admin");

            while(rs.next()){

                String designation = rs.getString("designation");
              
                   String client = rs.getString("client");
                   
                   String quantite = rs.getString("quantite");
           
                  String date_de_lancement = rs.getString("date_lancement");
                  
                  String date_exigée = rs.getString("date_exigée");
                  
                  String status = rs.getString("status");
                
             //   System.out.println(nom  + prenom +  + departement + mot_de_passe);
  

                // remplir le tableau 
                
                
                
                 DefaultTableModel model2 = (DefaultTableModel) table_commande.getModel();
       
       Object[] table = new Object[6];
   
               
      table[0] = designation;
       
       table[1] = client;

       
       table[2] = quantite;   
       
       table[3] = date_de_lancement; 
       
       table[4] = date_exigée; 
       
       table[5] = status ;
       
       model2.addRow(table);
       

            }
        
        }
        
          catch (SQLException ex) {
            System.out.println(ex.getMessage());
        }
        
 
    }  
    
    
    
        
        // DATE FILTER
        
        
        
    
    public void date_filter(String date1 , String date2){
    
    
    
        ResultSet rs;
        String url;
        Connection con = null;
        
            
                
         DefaultTableModel model2 = (DefaultTableModel) table_commande.getModel();
        
        
        try {
            Class.forName("com.mysql.jdbc.Driver");
            url="jdbc:mysql://localhost:3306/ahmed";
            con = DriverManager.getConnection(url,"root","Aminedridi11");
            //  System.out.println("mrigl");

        }
        catch (Exception e) {
            System.out.println(e.toString());
        }

        try {
            
       
                 // effacer tt le contenudu jtabel
                 
                 
            
        DefaultTableModel dm = (DefaultTableModel) table_commande.getModel();
int rowCount = dm.getRowCount();
//Remove rows one by one from the end of the table
for (int i = rowCount - 1; i >= 0; i--) {
    dm.removeRow(i);
}
                 

            Statement stm = con.createStatement();

      
            
            String sql = "select * from commande where date_lancement >= '"+ date1+"' and date_lancement <=  '" +  date2 +"' " ;

            rs =  stm.executeQuery(sql);
            
            System.out.print(sql);

            //rs = stm.executeQuery("SELECT * FROM admin");

            while(rs.next()){

                String client = rs.getString("client");
              
                   String quantite = rs.getString("quantite");
                   
                   String date_lancement = rs.getString("date_lancement");
                   
                    String date_exigée = rs.getString("date_exigée");
                    
                     String designation = rs.getString("designation");
           
                     String status = rs.getString("status");
                
             //   System.out.println(nom  + prenom +  + departement + mot_de_passe);
  

                // remplir le tableau 
                
          
       
       // remplir a nouveau en fct des dates
                 
       Object[] table = new Object[6];
   
            
      table[0] = designation ;
       
       table[1] = client ;

       
       table[2] = quantite ;   
       
          
       table[3] = date_lancement ;  
       
          
       table[4] = date_exigée ; 
       
        table[5] = status ; 
      
       
       
       
       model2.addRow(table);
       

       
            }
        
        }
        
          catch (SQLException ex) {
            System.out.println(ex.getMessage());
            System.out.println("waa");
        }
        
 
    
    
    
    }
    
    
    
    
        
        public void fill_combo_client() throws SQLException{
        
        
            
        String url;
        Connection con = null;
        try {
            Class.forName("com.mysql.jdbc.Driver");
            url="jdbc:mysql://localhost:3306/ahmed";
            con = DriverManager.getConnection(url,"root","Aminedridi11");
            //  System.out.println("mrigl");

        }
        catch (Exception e) {
            System.out.println(e.toString());
        }

            // login action

            Statement stm = con.createStatement();

           
           
            
         
            // check user
            
            ResultSet rs ; 
            
            String sql1 = "SELECT * FROM `client`  ";

            System.out.println(sql1);
            
            rs =  stm.executeQuery(sql1);
            
            

            //rs = stm.executeQuery("SELECT * FROM admin");

            while(rs.next()){
 
  
             combo_client.addItem(rs.getString("reference"));
           
            }
               
            
            
            
        }
    
    
    
        
        
        
        
        public void fill_combo_des() throws SQLException{
        
        
            
        String url;
        Connection con = null;
        try {
            Class.forName("com.mysql.jdbc.Driver");
            url="jdbc:mysql://localhost:3306/ahmed";
            con = DriverManager.getConnection(url,"root","Aminedridi11");
            //  System.out.println("mrigl");

        }
        catch (Exception e) {
            System.out.println(e.toString());
        }

            // login action

            Statement stm = con.createStatement();

           
           
            
         
            // check user
            
            ResultSet rs ; 
            
            String sql1 = "SELECT * FROM `article`  ";

            System.out.println(sql1);
            
            rs =  stm.executeQuery(sql1);
            
            

            //rs = stm.executeQuery("SELECT * FROM admin");

            while(rs.next()){
 
  
             combo_des.addItem(rs.getString("designation"));
           
            }
               
            
            
            
        }
    
    
        
        
        public void supprimer_commande(){
        
               String url;  
            Connection con = null;  
            try {  
                Class.forName("com.mysql.jdbc.Driver");  
            url="jdbc:mysql://localhost:3306/ahmed";  
                con = DriverManager.getConnection(url,"root","Aminedridi11");  
              //  System.out.println("mrigl");  
              
                }  
                catch (Exception e) {  
                System.out.println(e.toString());  
            }
            
        try {
            // login action
            
            Statement stm = con.createStatement();
            
            //execute query
            
            // input pour l'update celon la matricule
        
            if ( check_prod.isSelected() == false ){
            
           String designation = combo_des.getSelectedItem().toString();
           
          
            
            //UPDATE client SET rue = '49 Rue Ameline',ville = 'Saint-Eustache-la-Forêt',code_postal = '76210' WHERE id = 2
        
              
         String sql =" DELETE FROM commande WHERE designation ='"+designation+"'" ;       
         System.out.println(sql);
         
        
         
        PreparedStatement ps = con.prepareStatement(sql);
         
          ps.executeUpdate();
  
            int SelectedRowIndex = table_commande.getSelectedRow();
            
            
                
                 DefaultTableModel model2 = (DefaultTableModel) table_commande.getModel();
                 // effacer la ligne selectionnée
                 
                 
                 model2.removeRow(SelectedRowIndex);
         
      //   System.out.println("le utilisateur de nom "+nom+" est supprimé !!!  ");
         
         JOptionPane.showMessageDialog(this,"la commande est supprimé avec succés  ");
       
       
     
            }
            
            else {
            
            
              
         String sql =" DELETE FROM commande WHERE designation ='"+txt_des.getText()+"'" ;       
         System.out.println(sql);
         
        
         
        PreparedStatement ps = con.prepareStatement(sql);
         
          ps.executeUpdate();
  
          
          
            int SelectedRowIndex = table_commande.getSelectedRow();
            
            
                
                 DefaultTableModel model2 = (DefaultTableModel) table_commande.getModel();
                 // effacer la ligne selectionnée
                 
                 
                 model2.removeRow(SelectedRowIndex);
         
         
      //   System.out.println("le utilisateur de nom "+nom+" est supprimé !!!  ");
         
         JOptionPane.showMessageDialog(this,"la commande est supprimé avec succés  ");
            
            
            }
            
            
        } catch (SQLException ex) {
            
            System.out.println(ex.getMessage());
            
        }
        
            
        }
        
        
        public void inserer_commande(){
        
            
        
          // btouon enregistrer ( inserer )
        
          // date format
           
           DateFormat df = new SimpleDateFormat("yyyy-MM-dd");
          
          String designation = combo_des.getSelectedItem().toString();
         
          String client = combo_client.getSelectedItem().toString();
          
          String quantite = txt_quantite.getText();
          
          String date_de_lancement = df.format( date_lancement.getDate() );
          
           String date_exigé = df.format( date_exigée.getDate() );
          
           
           String status = "en attente";
          
           
          // si combo desi est selectionne
          
          
         if ( check_prod.isSelected() == false ){
           
             try{
                 
                 
             if ( designation_unique(combo_des.getSelectedItem().toString() ) == true ){
             
                 // des non unique 
                 
                 System.out.println("deignation non unique");
                  
                 }
             
             //else
             
             else{
             
       String url;  
            Connection con = null;  
            try {  
                Class.forName("com.mysql.jdbc.Driver");  
            url="jdbc:mysql://localhost:3306/ahmed";  
                con = DriverManager.getConnection(url,"root","Aminedridi11");  
              //  System.out.println("mrigl");  
              
                }  
                catch (Exception e) {  
                System.out.println(e.toString());  
            }
            
        try {
            // login action
            
            Statement stm = con.createStatement();
            
            //execute query

         
         String sql =" INSERT INTO commande (designation,client,quantite,date_lancement,date_exigée,status) VALUES ('"+designation+"','"+client+"','"+quantite+"','"+date_de_lancement+"','"+date_exigé+"','"+status+"') " ;       
     
         System.out.println(sql);
      
         
        PreparedStatement ps = con.prepareStatement(sql);
         
          ps.executeUpdate();
  
         
         
         JOptionPane.showMessageDialog(this,"la commande est ajouté avec succés ");
         
       
       
     
   
       // remplir le tab avec nouveau utilisateur
       
    
                
                 DefaultTableModel model3 = (DefaultTableModel) table_commande.getModel();
       
                 
                 
       Object[] table = new Object[6];
   
               
      table[0] = designation ;
       
       table[1] = client ;

       
       table[2] = quantite ;   
       
          
       table[3] = date_de_lancement ;  
       
          
       table[4] = date_exigé ; 
       
        table[5] = status ; 
      
       
                 
       
       model3.addRow(table);
       
      
      
        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
        }
        
         }
             
             }
             catch(Exception ex){
             System.out.println(ex.getMessage());
             }
          
         }
         
         
         
         
         
         else {
         
         // check box nv prod  =  true ( check_prod is selected = true )
        
          try{
              
              
        
         if ( designation_unique(txt_des.getText()) == true ){
         
             // des non unique
             
             System.out.println(" designation non unique ");
             
         }
         
         
         
         // else 
         
         
         
          else{
         
       String url;  
            Connection con = null;  
            try {  
                Class.forName("com.mysql.jdbc.Driver");  
            url="jdbc:mysql://localhost:3306/ahmed";  
                con = DriverManager.getConnection(url,"root","Aminedridi11");  
              //  System.out.println("mrigl");  
              
                }  
                catch (Exception e) {  
                System.out.println(e.toString());  
            }
            
        try {
            // login action
            
            Statement stm = con.createStatement();
            
            //execute query

         
         String sql =" INSERT INTO commande (designation,client,quantite,date_lancement,date_exigée,status) VALUES ('"+txt_des.getText()+" ',' "+client+"','"+quantite+"','"+date_de_lancement+"','"+date_exigé+"','" +status+"') " ;       
     
         System.out.println(sql);
      
         
        PreparedStatement ps = con.prepareStatement(sql);
         
          ps.executeUpdate();
  
         
         
         JOptionPane.showMessageDialog(this,"la commande est ajouté avec succés ");
         
       
       
     
   
       // remplir le tab avec nouveau utilisateur
       
    
                
                 DefaultTableModel model3 = (DefaultTableModel) table_commande.getModel();
       
                 
                 
       Object[] table = new Object[6];
   
               
      table[0] = txt_des.getText() ;
       
       table[1] = client ;

       
       table[2] = quantite ;   
       
          
       table[3] = date_de_lancement ;  
       
          
       table[4] = date_exigé ; 
       
        table[5] = status ; 
      
       
                 
       
       model3.addRow(table);
       
  
              
        // macro mail
        
        /**
             Process run;

         String commande_mail = "cscript D:\\mail.vbs";
     
            run = Runtime.getRuntime().exec(commande_mail);
            
            System.out.println(" mail teb3ath ");
            
            **/
            
        } catch (Exception ex) {
            
        System.out.println(ex.getMessage());
            
            
        } 
        
        
        this.dispose();
         
         }
        
         
         
         }
         catch(Exception ex){
                 System.out.println(ex.getMessage());
                 }
         
          
        
    
         }
        
            
        
        }
        
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Gestion_commandes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Gestion_commandes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Gestion_commandes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Gestion_commandes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Gestion_commandes().setVisible(true);
                } catch (SQLException ex) {
                   System.out.println(ex.getMessage());
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_ajouter;
    private javax.swing.JButton btn_modifier;
    private javax.swing.JButton btn_supprimer;
    private javax.swing.JCheckBox check_prod;
    private javax.swing.JComboBox<String> combo_client;
    private javax.swing.JComboBox<String> combo_des;
    private javax.swing.JComboBox<String> combo_status;
    private com.toedter.calendar.JDateChooser date_exigée;
    private com.toedter.calendar.JDateChooser date_inf;
    private com.toedter.calendar.JDateChooser date_lancement;
    private com.toedter.calendar.JDateChooser date_sup;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel62;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel64;
    private javax.swing.JLabel jLabel65;
    private javax.swing.JLabel jLabel66;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbl_date_filter;
    private javax.swing.JLabel lbl_filter;
    private javax.swing.JPanel panel_commande;
    private javax.swing.JPanel panel_matricule4;
    private javax.swing.JPanel panel_matricule5;
    private javax.swing.JPanel panel_matricule6;
    private javax.swing.JPanel panel_matricule7;
    private javax.swing.JPanel panel_matricule8;
    private javax.swing.JPanel panel_matricule9;
    private javax.swing.JPanel panel_utilisateur;
    private javax.swing.JTable table_commande;
    private javax.swing.JLabel txt_date;
    private javax.swing.JTextField txt_quantite;
    private javax.swing.JTextField txt_recherche;
    // End of variables declaration//GEN-END:variables
}
