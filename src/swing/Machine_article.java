/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package swing;

import java.awt.Label;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.Icon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author dridi family
 */
public class Machine_article extends javax.swing.JFrame {

    /** Creates new form Machine_article
     * @param designation */
    public Machine_article(String designation) {
        initComponents();
        remplir_machine_tab(designation);
        
        this.setResizable(false);
    }

    private Machine_article() {
             initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table_machine = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        btn_supprimer = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(51, 0, 51));

        jScrollPane1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));

        table_machine.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        table_machine.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "designation", "nom machine", "largeur", "epaisseur", "nbr pistes", "largeur ruban", "largeur totale", "soufflet a", "soufflet b", "tirage", "debit"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table_machine.setGridColor(new java.awt.Color(255, 255, 255));
        table_machine.setRowHeight(22);
        table_machine.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table_machineMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table_machine);
        if (table_machine.getColumnModel().getColumnCount() > 0) {
            table_machine.getColumnModel().getColumn(0).setResizable(false);
            table_machine.getColumnModel().getColumn(1).setResizable(false);
            table_machine.getColumnModel().getColumn(2).setResizable(false);
            table_machine.getColumnModel().getColumn(3).setResizable(false);
            table_machine.getColumnModel().getColumn(4).setResizable(false);
            table_machine.getColumnModel().getColumn(5).setResizable(false);
            table_machine.getColumnModel().getColumn(6).setResizable(false);
            table_machine.getColumnModel().getColumn(7).setResizable(false);
            table_machine.getColumnModel().getColumn(8).setResizable(false);
            table_machine.getColumnModel().getColumn(9).setResizable(false);
            table_machine.getColumnModel().getColumn(10).setResizable(false);
        }

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/swing/images/cancel_icon.png"))); // NOI18N
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });

        btn_supprimer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/swing/images/delete_icon.png"))); // NOI18N
        btn_supprimer.setText(" supprimer");
        btn_supprimer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_supprimerMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btn_supprimer, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49)
                .addComponent(jLabel2)
                .addGap(463, 463, 463))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1020, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(99, 99, 99)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_supprimer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(32, 32, 32))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void table_machineMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table_machineMouseClicked

        
        // table mouse clicked
        
        DefaultTableModel model3 = (DefaultTableModel) table_machine.getModel();
        
        int SelectedRowIndex = table_machine.getSelectedRow();
        
      
        
        
        
        // designation
        
        
        System.out.println(" designation = " + model3.getValueAt(SelectedRowIndex, 0).toString());
       
        
        String designation = model3.getValueAt(SelectedRowIndex, 0).toString() ;
        
        // nom_machine
        
        System.out.println(" nom machine = " + model3.getValueAt(SelectedRowIndex, 1).toString());
        
        
          String nom_machine = model3.getValueAt(SelectedRowIndex, 1).toString() ;
        
        // largeur
        
        System.out.println(" largeur = " + model3.getValueAt(SelectedRowIndex, 2).toString());
        
        String largeur =  model3.getValueAt(SelectedRowIndex, 2).toString();
        // epaisseur
 
        System.out.println(" epaisseur = " + model3.getValueAt(SelectedRowIndex, 3).toString());
        
       
        String epaisseur = model3.getValueAt(SelectedRowIndex, 3).toString();
        
        
        // nbr de pistes
        
        
        System.out.println(" nbr de pistes = " + model3.getValueAt(SelectedRowIndex, 4).toString());
        
        String nbr_pistes = model3.getValueAt(SelectedRowIndex, 4).toString();
        
         // largeur ruban
         
         
        
        
        System.out.println(" largeur ruban = " + model3.getValueAt(SelectedRowIndex, 5).toString());
        
        
        String largeur_ruban = model3.getValueAt(SelectedRowIndex, 5).toString();
        
        
        // largeur totale
  
        
        
        System.out.println(" largeur_totale = " + model3.getValueAt(SelectedRowIndex, 6).toString());
        
        String largeur_totale =  model3.getValueAt(SelectedRowIndex, 6).toString();
          
        //  soufflet_a
        
       
        
        System.out.println(" soufflet_a = " + model3.getValueAt(SelectedRowIndex, 7).toString());
        
        String soufflet_a = model3.getValueAt(SelectedRowIndex, 7).toString() ;
        
          
        // soufflet_b
        
        
        System.out.println(" soufflet_b = " + model3.getValueAt(SelectedRowIndex, 8).toString());
        
        String soufflet_b =  model3.getValueAt(SelectedRowIndex, 8).toString();
        
        
        // tirage
        
        
         System.out.println(" tirage = " + model3.getValueAt(SelectedRowIndex, 9).toString());
        
        String tirage =  model3.getValueAt(SelectedRowIndex, 9).toString();
        
        
        // debit
        
         System.out.println(" debit = " + model3.getValueAt(SelectedRowIndex, 10).toString());
        
        String debit =  model3.getValueAt(SelectedRowIndex, 10).toString();
        
        
        
       Liste_machines liste_machine = new Liste_machines(designation,nom_machine,largeur,epaisseur,nbr_pistes,largeur_ruban,largeur_totale,soufflet_a,soufflet_b,tirage,debit);
        
        liste_machine.setVisible(true);
  
        
    }//GEN-LAST:event_table_machineMouseClicked

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
        this.dispose();
    }//GEN-LAST:event_jLabel2MouseClicked

    private void btn_supprimerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_supprimerMouseClicked
        
        
        //supp
        
        
            String url;  
            Connection con = null;  
            try {  
                Class.forName("com.mysql.jdbc.Driver");  
            url="jdbc:mysql://localhost:3306/ahmed";  
                con = DriverManager.getConnection(url,"root","Aminedridi11");  
              //  System.out.println("mrigl");  
              
                }  
                catch (Exception e) {  
                System.out.println(e.toString());  
            }
            
        try {
            // login action
            
            Statement stm = con.createStatement();
            
            //execute query
            
            // input pour l'update celon la matricule
        
            
            //UPDATE client SET rue = '49 Rue Ameline',ville = 'Saint-Eustache-la-Forêt',code_postal = '76210' WHERE id = 2
        
                 
        DefaultTableModel model3 = (DefaultTableModel) table_machine.getModel();
        
        int SelectedRowIndex = table_machine.getSelectedRow();
        
        
         String sql =" DELETE FROM machines WHERE designation ='"+model3.getValueAt(SelectedRowIndex, 0).toString()+"' AND nom_machine = '"+model3.getValueAt(SelectedRowIndex, 1).toString()+"' ;"  ;       
         System.out.println(sql);
         
        
         
        PreparedStatement ps = con.prepareStatement(sql);
         
          ps.executeUpdate();
  
         
      //   System.out.println("le utilisateur de nom "+nom+" est supprimé !!!  ");
         
         JOptionPane.showMessageDialog(this,"la machine de designation = "+ model3.getValueAt(SelectedRowIndex, 0).toString() +" est supprimé avec succés  ");
       
       
     
   
        } catch (SQLException ex) {
            
            System.out.println(ex.getMessage());
            
        }
        
        // supprimer la ligne selectionnée dans jtbale
        
         int SelectedRowIndex = table_machine.getSelectedRow();
            
            
                
                 DefaultTableModel model2 = (DefaultTableModel) table_machine.getModel();
                 // effacer la ligne selectionnée
                 
                 
                 model2.removeRow(SelectedRowIndex);
                 
                 
        
    }//GEN-LAST:event_btn_supprimerMouseClicked

    
    
    
      
        private void remplir_machine_tab(String designation){
                   
        ResultSet rs;
        String url;
        Connection con = null;
        try {
            Class.forName("com.mysql.jdbc.Driver");
            url="jdbc:mysql://localhost:3306/ahmed";
            con = DriverManager.getConnection(url,"root","Aminedridi11");
            //  System.out.println("mrigl");

        }
        catch (Exception e) {
            System.out.println(e.toString());
        }

        try {
            // login action

            Statement stm = con.createStatement();

      

            rs =  stm.executeQuery("SELECT * FROM `machines` WHERE designation = '"+ designation +"' ;");

            //rs = stm.executeQuery("SELECT * FROM admin");

            while(rs.next()){

                String designation_article = rs.getString("designation");
                   String nom_machine = rs.getString("nom_machine");
                   float largeur = rs.getFloat("largeur");
                      float epaisseur = rs.getFloat("epaisseur");
                   float nbr_pistes = rs.getFloat("nbr_pistes");
                    float largeur_ruban = rs.getFloat("lar_ruban");
                    float largeur_totale = rs.getFloat("lar_totale");
                 
                    
                      float soufflet_a = rs.getFloat("souflet_a");
                      
                      float soufflet_b = rs.getFloat("souflet_b");
                      
                      String tirage = rs.getString("tirage");
                      
                        float debit = rs.getFloat("debit");
                        
                         

                   DefaultTableModel model2 = (DefaultTableModel) table_machine.getModel();
       
                   
       Object[] table = new Object[11];
   
               
      table[0] = designation_article;
       
       table[1] = nom_machine;

       table[2] = largeur;   
       
       table[3] = epaisseur;  
       
        table[4] = nbr_pistes;  
       
        table[5] = largeur_ruban ;  
       
        table[6] = largeur_totale ; 
        
        table[7] = soufflet_a ; 
        
        table[8] = soufflet_b ; 
        
         table[9] = tirage ; 
         
          table[10] = debit ; 
        
       model2.addRow(table);
       

            }
        
        }
        
          catch (SQLException ex) {
            System.out.println(ex.getMessage());
        }
        
 
    }  
    
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Machine_article.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Machine_article.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Machine_article.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Machine_article.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Machine_article().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel btn_supprimer;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable table_machine;
    // End of variables declaration//GEN-END:variables

}
